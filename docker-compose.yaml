version: "3.7"
services:
  drone:
    image: drone/drone:1
    depends_on:
      - postgres
    environment:
      - DRONE_GITHUB_SERVER=https://github.com
      - DRONE_GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - DRONE_GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - DRONE_RUNNER_CAPACITY=${RUNNER_CAPACITY}
      - DRONE_RUNNER_NETWORKS=${TRAEFIK_NETWORK}
      - DRONE_SERVER_HOST=${DOMAIN}
      - DRONE_SERVER_PROTO=https
      - DRONE_TLS_AUTOCERT=false
      - DRONE_DATABASE_DRIVER=postgres
      - DRONE_DATABASE_DATASOURCE=postgres://drone:${DB_PASSWORD}@postgres:5432/drone?sslmode=disable
      - DRONE_DATABASE_SECRET=${DB_SECRET}
      - DRONE_USER_CREATE=username:${ADMIN_USERNAME},admin:true
      - DRONE_USER_FILTER=${ADMIN_USERNAME}
      - DRONE_REPOSITORY_FILTER=${REPOSITORY_FILTER}
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - drone:/data
    labels:
      traefik.enable: true
      traefik.frontend.rule: "Host:${DOMAIN}"
    restart: unless-stopped
  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=drone
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - traefik
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: unless-stopped
volumes:
  drone:
  postgres:
networks:
  traefik:
    name: ${TRAEFIK_NETWORK}
    external: true
